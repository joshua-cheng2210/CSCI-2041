
type token = 
  | RPAREN
  | PROVE
  | LPAREN
  | LET
  | IDENT of (
# 4 "lib/parser.mly"
       (string)
# 11 "lib/parser__mock.ml.mock"
)
  | EOF

# 1 "lib/parser.mly"
  
  open Ast

# 19 "lib/parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_main, xv_expression) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 16 "lib/parser.mly"
                  _2
# 28 "lib/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 16 "lib/parser.mly"
  e
# 32 "lib/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e_ : Lexing.position) (_endpos_e_ : Lexing.position) (_startofs_e_ : int) (_endofs_e_ : int) (_loc_e_ : Lexing.position * Lexing.position) ->
    ((
# 16 "lib/parser.mly"
                       ( [e] )
# 37 "lib/parser__mock.ml.mock"
     : 'tv_main) : (
# 13 "lib/parser.mly"
      (expression list)
# 41 "lib/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 22 "lib/parser.mly"
                                           _4
# 46 "lib/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 22 "lib/parser.mly"
                           e2
# 50 "lib/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e2_ : Lexing.position) (_endpos_e2_ : Lexing.position) (_startofs_e2_ : int) (_endofs_e2_ : int) (_loc_e2_ : Lexing.position * Lexing.position) (
# 22 "lib/parser.mly"
                  _2
# 54 "lib/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 22 "lib/parser.mly"
  e1
# 58 "lib/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e1_ : Lexing.position) (_endpos_e1_ : Lexing.position) (_startofs_e1_ : int) (_endofs_e1_ : int) (_loc_e1_ : Lexing.position * Lexing.position) ->
    (
# 23 "lib/parser.mly"
  ( Application (e1, e2) )
# 63 "lib/parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 21 "lib/parser.mly"
                   nm
# 68 "lib/parser__mock.ml.mock"
   : (
# 4 "lib/parser.mly"
       (string)
# 72 "lib/parser__mock.ml.mock"
  )) (_startpos_nm_ : Lexing.position) (_endpos_nm_ : Lexing.position) (_startofs_nm_ : int) (_endofs_nm_ : int) (_loc_nm_ : Lexing.position * Lexing.position) (
# 21 "lib/parser.mly"
  e1
# 76 "lib/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e1_ : Lexing.position) (_endpos_e1_ : Lexing.position) (_startofs_e1_ : int) (_endofs_e1_ : int) (_loc_e1_ : Lexing.position * Lexing.position) ->
    (
# 21 "lib/parser.mly"
                              ( Application (e1, Identifier nm) )
# 81 "lib/parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 20 "lib/parser.mly"
  nm
# 86 "lib/parser__mock.ml.mock"
   : (
# 4 "lib/parser.mly"
       (string)
# 90 "lib/parser__mock.ml.mock"
  )) (_startpos_nm_ : Lexing.position) (_endpos_nm_ : Lexing.position) (_startofs_nm_ : int) (_endofs_nm_ : int) (_loc_nm_ : Lexing.position * Lexing.position) ->
    (
# 20 "lib/parser.mly"
             ( Identifier nm )
# 95 "lib/parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 19 "lib/parser.mly"
                           _3
# 100 "lib/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 19 "lib/parser.mly"
           e
# 104 "lib/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e_ : Lexing.position) (_endpos_e_ : Lexing.position) (_startofs_e_ : int) (_endofs_e_ : int) (_loc_e_ : Lexing.position * Lexing.position) (
# 19 "lib/parser.mly"
 _1
# 108 "lib/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 19 "lib/parser.mly"
                                   ( e )
# 113 "lib/parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 18 "lib/parser.mly"
 _1
# 118 "lib/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 18 "lib/parser.mly"
        ( Identifier "(*prove*)" )
# 123 "lib/parser__mock.ml.mock"
     : 'tv_expression) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_main * 'tv_expression)

and menhir_end_marker =
  0
